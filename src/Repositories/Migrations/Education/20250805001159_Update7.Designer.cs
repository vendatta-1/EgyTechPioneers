// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.Data;

#nullable disable

namespace Repository.Migrations.Education
{
    [DbContext(typeof(EducationContext))]
    [Migration("20250805001159_Update7")]
    partial class Update7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.AcademyClaseDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyClaseMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyClaseTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClaseNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaseNumber"));

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AcademyClaseMasterId");

                    b.ToTable("AcademyClaseDetails");
                });

            modelBuilder.Entity("Entities.Models.AcademyClaseMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaseAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ClaseBranchNo")
                        .HasColumnType("int");

                    b.Property<string>("ClaseNameL1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClaseNameL2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClaseOwnerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CommunicationsMobil")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CommunicationsOfficer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("EmailClase")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("EmailOwner")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerMobil")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("GovernorateCodeId");

                    b.ToTable("AcademyClaseMasters");
                });

            modelBuilder.Entity("Entities.Models.AcademyClaseType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassTypeNameId")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AcademyClaseTypes");
                });

            modelBuilder.Entity("Entities.Models.AcademyData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcademyAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AcademyEmail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AcademyFacebook")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AcademyInstagram")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AcademyMobil")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AcademyNameL1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AcademyNameL2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AcademyPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AcademySnapchat")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AcademyTiktok")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AcademyTwitter")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AcademyWebSite")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AcademyWhatsapp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AcademyYoutube")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AttachFiles")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommercialRegisterNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaxRegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxesErrand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AcademyData");
                });

            modelBuilder.Entity("Entities.Models.AcademyJob", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobLink")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("JobNameL1")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("JobNameL2")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("JobNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobNo"));

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.ToTable("AcademyJobs");
                });

            modelBuilder.Entity("Entities.Models.BranchData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BranchAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BranchEmail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid?>("BranchManager")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BranchMobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BranchNameL1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BranchNameL2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BranchPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BranchWhatsapp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("BranchesDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchesDataId"));

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AcademyDataId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("CountryCodeId");

                    b.HasIndex("GovernorateCodeId");

                    b.ToTable("BranchesData");
                });

            modelBuilder.Entity("Entities.Models.Chat.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MessageType")
                        .HasColumnType("int");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiverDisplayName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RepliedToMessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SenderDisplayName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("Entities.Models.CityCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CityNameL1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CityNameL2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GovernorateCodeId");

                    b.ToTable("CityCodes");
                });

            modelBuilder.Entity("Entities.Models.Complaints.ComplaintsStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusesNameL1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StatusesNameL2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ComplaintsStatuses");
                });

            modelBuilder.Entity("Entities.Models.Complaints.ComplaintsType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeNameL1")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("TypeNameL2")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("ComplaintsTypes");
                });

            modelBuilder.Entity("Entities.Models.ComplaintsStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ComplaintsNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComplaintsNo"));

                    b.Property<Guid?>("ComplaintsStatusesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ComplaintsTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FilesAttach")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StudentsDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("ComplaintsStatusesId");

                    b.HasIndex("ComplaintsTypeId");

                    b.HasIndex("StudentsDataId");

                    b.ToTable("ComplaintsStudents");
                });

            modelBuilder.Entity("Entities.Models.CountryCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryNameL1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryNameL2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CountryCodes");
                });

            modelBuilder.Entity("Entities.Models.GovernorateCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GovernorateNameL1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GovernorateNameL2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CountryCodeId");

                    b.ToTable("GovernorateCodes");
                });

            modelBuilder.Entity("Entities.Models.PermissionUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AddForm")
                        .HasColumnType("bit");

                    b.Property<long?>("ApplicationMenuId")
                        .HasColumnType("bigint");

                    b.Property<string>("AspNetUsersId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DeleteForm")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EditForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("ExportDataGrid")
                        .HasColumnType("bit");

                    b.Property<bool?>("ExportFile")
                        .HasColumnType("bit");

                    b.Property<bool?>("FilterForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("OpenForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("PrinterReport")
                        .HasColumnType("bit");

                    b.Property<bool?>("ReadForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("SearchForm")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PermissionUsers");
                });

            modelBuilder.Entity("Entities.Models.System.EduContactResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Attachment")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateResult")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReasonsRejectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ResultUd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResultUd"));

                    b.Property<Guid?>("StudentDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("EduContactResults");
                });

            modelBuilder.Entity("Entities.Models.System.ProgramsContentDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProgramsContentMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ScientificMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionQuiz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionTasks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionVideo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramsContentMasterId");

                    b.ToTable("ProgramsContentDetails");
                });

            modelBuilder.Entity("Entities.Models.System.ProgramsContentMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProgramsDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ScientificMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionNameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionNameL2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionNo"));

                    b.HasKey("Id");

                    b.HasIndex("ProgramsDetailsId");

                    b.ToTable("ProgramsContentMasters");
                });

            modelBuilder.Entity("Entities.Models.System.ProgramsDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgramNameL1")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("ProgramNameL2")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("ProgramNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramNo"));

                    b.Property<Guid?>("ProjectsDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectsDetailsId");

                    b.ToTable("ProgramsDetails");
                });

            modelBuilder.Entity("Entities.Models.System.ProjectsDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectDetailsNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectDetailsNo"));

                    b.Property<string>("ProjectNameL1")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("ProjectNameL2")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<Guid?>("ProjectsMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectsMasterId");

                    b.ToTable("ProjectsDetails");
                });

            modelBuilder.Entity("Entities.Models.System.ProjectsMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("ProjectEnd")
                        .HasColumnType("date");

                    b.Property<string>("ProjectFile")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ProjectNameL1")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("ProjectNameL2")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("ProjectNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectNo"));

                    b.Property<string>("ProjectResources")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateOnly?>("ProjectStart")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AcademyDataId");

                    b.HasIndex("BranchesDataId");

                    b.ToTable("ProjectsMasters");
                });

            modelBuilder.Entity("Entities.Models.System.QuestionBankDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnswerNameL1")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("AnswerNameL2")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("AnswerNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnswerNo"));

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("QuestionBankMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestionBankMasterId");

                    b.ToTable("QuestionBankDetails");
                });

            modelBuilder.Entity("Entities.Models.System.QuestionBankMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProgramsDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QuestionNameL1")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("QuestionNameL2")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("QuestionNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionNo"));

                    b.HasKey("Id");

                    b.HasIndex("ProgramsDetailsId");

                    b.ToTable("QuestionBankMasters");
                });

            modelBuilder.Entity("Entities.Models.System.SkillDevelopment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FilesAttach")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkVideo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SkillNameL1")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("SkillNameL2")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("SkillNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillNo"));

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.ToTable("SkillDevelopments");
                });

            modelBuilder.Entity("Entities.Models.System.StudentAttend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AttendAccept")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DateAttend")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StudentDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentDataId");

                    b.ToTable("StudentAttends");
                });

            modelBuilder.Entity("Entities.Models.System.StudentContentDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProgramsContentDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SessionProject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SessionQuiz")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SessionTasks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("StudentDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProgramsContentDetailsId");

                    b.HasIndex("StudentDataId");

                    b.ToTable("StudentContentDetails");
                });

            modelBuilder.Entity("Entities.Models.System.StudentData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyClaseDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyClaseDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CertificateName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityCodeId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAcademy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("EmailPassword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GraduationStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LinkedIn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProfileCode")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProjectsDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectsDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecommendJobProfile")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("RecommendTrack")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("StudentBarCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StudentCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentCode"));

                    b.Property<string>("StudentEmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid?>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StudentGroupId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentMobil")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("StudentNameL1")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("StudentNameL2")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("StudentPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StudentWhatsapp")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Track")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("TrainingGovernorateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TrainingProvider")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("TrainingTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AcademyClaseDetailId");

                    b.HasIndex("AcademyClaseDetailsId");

                    b.HasIndex("BranchDataId");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("CityCodeId1");

                    b.HasIndex("GovernorateCodeId");

                    b.HasIndex("ProjectsDetailId");

                    b.HasIndex("ProjectsDetailsId");

                    b.HasIndex("StudentGroupId");

                    b.HasIndex("StudentGroupId1");

                    b.HasIndex("TrainingGovernorateId");

                    b.ToTable("StudentData");
                });

            modelBuilder.Entity("Entities.Models.System.StudentEvaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("AbsenceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AttendanceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BrowsingRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ContentRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StudentDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentDataId");

                    b.ToTable("StudentEvaluations");
                });

            modelBuilder.Entity("Entities.Models.System.StudentGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyClaseDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyCourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DataFinch")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Friday")
                        .HasColumnType("bit");

                    b.Property<string>("GroupNameL1")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("GroupNameL2")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("GroupNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupNo"));

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Monday")
                        .HasColumnType("bit");

                    b.Property<int?>("NumberStudents")
                        .HasColumnType("int");

                    b.Property<bool?>("OfflineF")
                        .HasColumnType("bit");

                    b.Property<bool?>("OfflineM")
                        .HasColumnType("bit");

                    b.Property<bool?>("OfflineS")
                        .HasColumnType("bit");

                    b.Property<bool?>("OfflineSu")
                        .HasColumnType("bit");

                    b.Property<bool?>("OfflineT")
                        .HasColumnType("bit");

                    b.Property<bool?>("OfflineTh")
                        .HasColumnType("bit");

                    b.Property<bool?>("OfflineW")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnlineF")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnlineM")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnlineS")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnlineSu")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnlineT")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnlineTh")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnlineW")
                        .HasColumnType("bit");

                    b.Property<bool?>("Saturday")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Sunday")
                        .HasColumnType("bit");

                    b.Property<Guid?>("TeacherDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Thursday")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tuesday")
                        .HasColumnType("bit");

                    b.Property<bool?>("Wednesday")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AcademyClaseDetailsId");

                    b.HasIndex("BranchesDataId");

                    b.ToTable("StudentGroups");
                });

            modelBuilder.Entity("Entities.Models.System.TeacherData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DateStart")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deletedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("IsNotactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("TeacherAddress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateOnly?>("TeacherCancel")
                        .HasColumnType("date");

                    b.Property<string>("TeacherEmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TeacherMobile")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TeacherNameL1")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("TeacherNameL2")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("TeacherNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherNo"));

                    b.Property<string>("TeacherPhone")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TeacherWhatsapp")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("GovernorateCodeId");

                    b.ToTable("TeacherData");
                });

            modelBuilder.Entity("Entities.Models.AcademyClaseDetail", b =>
                {
                    b.HasOne("Entities.Models.AcademyClaseMaster", "AcademyClaseMaster")
                        .WithMany("AcademyClaseDetails")
                        .HasForeignKey("AcademyClaseMasterId");

                    b.Navigation("AcademyClaseMaster");
                });

            modelBuilder.Entity("Entities.Models.AcademyClaseMaster", b =>
                {
                    b.HasOne("Entities.Models.BranchData", "BranchesData")
                        .WithMany("AcademyClaseMasters")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("Entities.Models.CityCode", "CityCode")
                        .WithMany("AcademyClaseMasters")
                        .HasForeignKey("CityCodeId");

                    b.HasOne("Entities.Models.GovernorateCode", "GovernorateCode")
                        .WithMany("AcademyClaseMasters")
                        .HasForeignKey("GovernorateCodeId");

                    b.Navigation("BranchesData");

                    b.Navigation("CityCode");

                    b.Navigation("GovernorateCode");
                });

            modelBuilder.Entity("Entities.Models.AcademyJob", b =>
                {
                    b.HasOne("Entities.Models.BranchData", "BranchesData")
                        .WithMany("AcademyJobs")
                        .HasForeignKey("BranchesDataId");

                    b.Navigation("BranchesData");
                });

            modelBuilder.Entity("Entities.Models.BranchData", b =>
                {
                    b.HasOne("Entities.Models.AcademyData", "AcademyData")
                        .WithMany("BranchesData")
                        .HasForeignKey("AcademyDataId");

                    b.HasOne("Entities.Models.CityCode", "CityCode")
                        .WithMany("BranchesData")
                        .HasForeignKey("CityCodeId");

                    b.HasOne("Entities.Models.CountryCode", "CountryCode")
                        .WithMany("BranchesData")
                        .HasForeignKey("CountryCodeId");

                    b.HasOne("Entities.Models.GovernorateCode", "GovernorateCode")
                        .WithMany("BranchesData")
                        .HasForeignKey("GovernorateCodeId");

                    b.Navigation("AcademyData");

                    b.Navigation("CityCode");

                    b.Navigation("CountryCode");

                    b.Navigation("GovernorateCode");
                });

            modelBuilder.Entity("Entities.Models.CityCode", b =>
                {
                    b.HasOne("Entities.Models.GovernorateCode", "GovernorateCode")
                        .WithMany("CityCodes")
                        .HasForeignKey("GovernorateCodeId");

                    b.Navigation("GovernorateCode");
                });

            modelBuilder.Entity("Entities.Models.ComplaintsStudent", b =>
                {
                    b.HasOne("Entities.Models.BranchData", "BranchesData")
                        .WithMany("ComplaintsStudents")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("Entities.Models.Complaints.ComplaintsStatus", "ComplaintsStatuses")
                        .WithMany("ComplaintsStudents")
                        .HasForeignKey("ComplaintsStatusesId");

                    b.HasOne("Entities.Models.Complaints.ComplaintsType", "ComplaintsType")
                        .WithMany("ComplaintsStudents")
                        .HasForeignKey("ComplaintsTypeId");

                    b.HasOne("Entities.Models.System.StudentData", "StudentsData")
                        .WithMany("ComplaintsStudents")
                        .HasForeignKey("StudentsDataId");

                    b.Navigation("BranchesData");

                    b.Navigation("ComplaintsStatuses");

                    b.Navigation("ComplaintsType");

                    b.Navigation("StudentsData");
                });

            modelBuilder.Entity("Entities.Models.GovernorateCode", b =>
                {
                    b.HasOne("Entities.Models.CountryCode", "CountryCode")
                        .WithMany("GovernorateCodes")
                        .HasForeignKey("CountryCodeId");

                    b.Navigation("CountryCode");
                });

            modelBuilder.Entity("Entities.Models.System.ProgramsContentDetail", b =>
                {
                    b.HasOne("Entities.Models.System.ProgramsContentMaster", "ProgramsContentMaster")
                        .WithMany("ProgramsContentDetails")
                        .HasForeignKey("ProgramsContentMasterId");

                    b.Navigation("ProgramsContentMaster");
                });

            modelBuilder.Entity("Entities.Models.System.ProgramsContentMaster", b =>
                {
                    b.HasOne("Entities.Models.System.ProgramsDetail", "ProgramsDetails")
                        .WithMany("ProgramsContentMasters")
                        .HasForeignKey("ProgramsDetailsId");

                    b.Navigation("ProgramsDetails");
                });

            modelBuilder.Entity("Entities.Models.System.ProgramsDetail", b =>
                {
                    b.HasOne("Entities.Models.System.ProjectsDetail", "ProjectsDetails")
                        .WithMany("ProgramsDetails")
                        .HasForeignKey("ProjectsDetailsId");

                    b.Navigation("ProjectsDetails");
                });

            modelBuilder.Entity("Entities.Models.System.ProjectsDetail", b =>
                {
                    b.HasOne("Entities.Models.System.ProjectsMaster", "ProjectsMaster")
                        .WithMany("ProjectsDetails")
                        .HasForeignKey("ProjectsMasterId");

                    b.Navigation("ProjectsMaster");
                });

            modelBuilder.Entity("Entities.Models.System.ProjectsMaster", b =>
                {
                    b.HasOne("Entities.Models.AcademyData", "AcademyData")
                        .WithMany("ProjectsMasters")
                        .HasForeignKey("AcademyDataId");

                    b.HasOne("Entities.Models.BranchData", "BranchesData")
                        .WithMany("ProjectsMasters")
                        .HasForeignKey("BranchesDataId");

                    b.Navigation("AcademyData");

                    b.Navigation("BranchesData");
                });

            modelBuilder.Entity("Entities.Models.System.QuestionBankDetail", b =>
                {
                    b.HasOne("Entities.Models.System.QuestionBankMaster", "QuestionBankMaster")
                        .WithMany("QuestionBankDetails")
                        .HasForeignKey("QuestionBankMasterId");

                    b.Navigation("QuestionBankMaster");
                });

            modelBuilder.Entity("Entities.Models.System.QuestionBankMaster", b =>
                {
                    b.HasOne("Entities.Models.System.ProgramsDetail", "ProgramsDetails")
                        .WithMany("QuestionBankMasters")
                        .HasForeignKey("ProgramsDetailsId");

                    b.Navigation("ProgramsDetails");
                });

            modelBuilder.Entity("Entities.Models.System.SkillDevelopment", b =>
                {
                    b.HasOne("Entities.Models.BranchData", "BranchesData")
                        .WithMany("SkillDevelopments")
                        .HasForeignKey("BranchesDataId");

                    b.Navigation("BranchesData");
                });

            modelBuilder.Entity("Entities.Models.System.StudentAttend", b =>
                {
                    b.HasOne("Entities.Models.System.StudentData", "StudentData")
                        .WithMany("StudentAttends")
                        .HasForeignKey("StudentDataId");

                    b.Navigation("StudentData");
                });

            modelBuilder.Entity("Entities.Models.System.StudentContentDetail", b =>
                {
                    b.HasOne("Entities.Models.System.ProgramsContentDetail", "ProgramsContentDetails")
                        .WithMany("StudentContentDetails")
                        .HasForeignKey("ProgramsContentDetailsId");

                    b.HasOne("Entities.Models.System.StudentData", "StudentData")
                        .WithMany("StudentContentDetails")
                        .HasForeignKey("StudentDataId");

                    b.Navigation("ProgramsContentDetails");

                    b.Navigation("StudentData");
                });

            modelBuilder.Entity("Entities.Models.System.StudentData", b =>
                {
                    b.HasOne("Entities.Models.AcademyClaseDetail", null)
                        .WithMany("StudentData")
                        .HasForeignKey("AcademyClaseDetailId");

                    b.HasOne("Entities.Models.AcademyClaseDetail", "AcademyClaseDetails")
                        .WithMany()
                        .HasForeignKey("AcademyClaseDetailsId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Entities.Models.BranchData", null)
                        .WithMany("StudentData")
                        .HasForeignKey("BranchDataId");

                    b.HasOne("Entities.Models.BranchData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Entities.Models.CityCode", "CityCode")
                        .WithMany()
                        .HasForeignKey("CityCodeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Entities.Models.CityCode", null)
                        .WithMany("StudentData")
                        .HasForeignKey("CityCodeId1");

                    b.HasOne("Entities.Models.GovernorateCode", "GovernorateCode")
                        .WithMany("StudentDataGovernorateCodes")
                        .HasForeignKey("GovernorateCodeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Entities.Models.System.ProjectsDetail", null)
                        .WithMany("StudentData")
                        .HasForeignKey("ProjectsDetailId");

                    b.HasOne("Entities.Models.System.ProjectsDetail", "ProjectsDetails")
                        .WithMany()
                        .HasForeignKey("ProjectsDetailsId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Entities.Models.System.StudentGroup", "StudentGroup")
                        .WithMany()
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Entities.Models.System.StudentGroup", null)
                        .WithMany("StudentData")
                        .HasForeignKey("StudentGroupId1");

                    b.HasOne("Entities.Models.GovernorateCode", "TrainingGovernorate")
                        .WithMany("StudentDataTrainingGovernorates")
                        .HasForeignKey("TrainingGovernorateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AcademyClaseDetails");

                    b.Navigation("BranchesData");

                    b.Navigation("CityCode");

                    b.Navigation("GovernorateCode");

                    b.Navigation("ProjectsDetails");

                    b.Navigation("StudentGroup");

                    b.Navigation("TrainingGovernorate");
                });

            modelBuilder.Entity("Entities.Models.System.StudentEvaluation", b =>
                {
                    b.HasOne("Entities.Models.System.StudentData", "StudentData")
                        .WithMany("StudentEvaluations")
                        .HasForeignKey("StudentDataId");

                    b.Navigation("StudentData");
                });

            modelBuilder.Entity("Entities.Models.System.StudentGroup", b =>
                {
                    b.HasOne("Entities.Models.AcademyClaseDetail", "AcademyClaseDetails")
                        .WithMany("StudentGroups")
                        .HasForeignKey("AcademyClaseDetailsId");

                    b.HasOne("Entities.Models.BranchData", "BranchesData")
                        .WithMany("StudentGroups")
                        .HasForeignKey("BranchesDataId");

                    b.Navigation("AcademyClaseDetails");

                    b.Navigation("BranchesData");
                });

            modelBuilder.Entity("Entities.Models.System.TeacherData", b =>
                {
                    b.HasOne("Entities.Models.BranchData", "BranchesData")
                        .WithMany("TeacherData")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("Entities.Models.CityCode", "CityCode")
                        .WithMany("TeacherData")
                        .HasForeignKey("CityCodeId");

                    b.HasOne("Entities.Models.GovernorateCode", "GovernorateCode")
                        .WithMany("TeacherData")
                        .HasForeignKey("GovernorateCodeId");

                    b.Navigation("BranchesData");

                    b.Navigation("CityCode");

                    b.Navigation("GovernorateCode");
                });

            modelBuilder.Entity("Entities.Models.AcademyClaseDetail", b =>
                {
                    b.Navigation("StudentData");

                    b.Navigation("StudentGroups");
                });

            modelBuilder.Entity("Entities.Models.AcademyClaseMaster", b =>
                {
                    b.Navigation("AcademyClaseDetails");
                });

            modelBuilder.Entity("Entities.Models.AcademyData", b =>
                {
                    b.Navigation("BranchesData");

                    b.Navigation("ProjectsMasters");
                });

            modelBuilder.Entity("Entities.Models.BranchData", b =>
                {
                    b.Navigation("AcademyClaseMasters");

                    b.Navigation("AcademyJobs");

                    b.Navigation("ComplaintsStudents");

                    b.Navigation("ProjectsMasters");

                    b.Navigation("SkillDevelopments");

                    b.Navigation("StudentData");

                    b.Navigation("StudentGroups");

                    b.Navigation("TeacherData");
                });

            modelBuilder.Entity("Entities.Models.CityCode", b =>
                {
                    b.Navigation("AcademyClaseMasters");

                    b.Navigation("BranchesData");

                    b.Navigation("StudentData");

                    b.Navigation("TeacherData");
                });

            modelBuilder.Entity("Entities.Models.Complaints.ComplaintsStatus", b =>
                {
                    b.Navigation("ComplaintsStudents");
                });

            modelBuilder.Entity("Entities.Models.Complaints.ComplaintsType", b =>
                {
                    b.Navigation("ComplaintsStudents");
                });

            modelBuilder.Entity("Entities.Models.CountryCode", b =>
                {
                    b.Navigation("BranchesData");

                    b.Navigation("GovernorateCodes");
                });

            modelBuilder.Entity("Entities.Models.GovernorateCode", b =>
                {
                    b.Navigation("AcademyClaseMasters");

                    b.Navigation("BranchesData");

                    b.Navigation("CityCodes");

                    b.Navigation("StudentDataGovernorateCodes");

                    b.Navigation("StudentDataTrainingGovernorates");

                    b.Navigation("TeacherData");
                });

            modelBuilder.Entity("Entities.Models.System.ProgramsContentDetail", b =>
                {
                    b.Navigation("StudentContentDetails");
                });

            modelBuilder.Entity("Entities.Models.System.ProgramsContentMaster", b =>
                {
                    b.Navigation("ProgramsContentDetails");
                });

            modelBuilder.Entity("Entities.Models.System.ProgramsDetail", b =>
                {
                    b.Navigation("ProgramsContentMasters");

                    b.Navigation("QuestionBankMasters");
                });

            modelBuilder.Entity("Entities.Models.System.ProjectsDetail", b =>
                {
                    b.Navigation("ProgramsDetails");

                    b.Navigation("StudentData");
                });

            modelBuilder.Entity("Entities.Models.System.ProjectsMaster", b =>
                {
                    b.Navigation("ProjectsDetails");
                });

            modelBuilder.Entity("Entities.Models.System.QuestionBankMaster", b =>
                {
                    b.Navigation("QuestionBankDetails");
                });

            modelBuilder.Entity("Entities.Models.System.StudentData", b =>
                {
                    b.Navigation("ComplaintsStudents");

                    b.Navigation("StudentAttends");

                    b.Navigation("StudentContentDetails");

                    b.Navigation("StudentEvaluations");
                });

            modelBuilder.Entity("Entities.Models.System.StudentGroup", b =>
                {
                    b.Navigation("StudentData");
                });
#pragma warning restore 612, 618
        }
    }
}
